plugins {
  id "org.standardout.bnd-platform" version "1.7.0"
  id 'com.github.ben-manes.versions' version '0.21.0'
}

repositories {
	jcenter()
}

platform {
	// configure proper names for the p2 update site
	categoryId = 'Open-Req-Eclipse-Libs'
	categoryName = 'Open Req Eclipse Libs'

	generatePlatformFeature = false

	defaultQualifier = ''
	useBndHashQualifiers = false
	useFeatureHashQualifiers = false
	defaultQualifierMap.prefix = ''

	feature(id: 'Project-Reactor', name: 'Project Reactor', version: '3.2.8') {
		plugin('io.projectreactor:reactor-core:3.2.8.RELEASE') {
			bnd {
				optionalImport 'javax.swing'
				optionalImport 'kotlin'
				optionalImport 'kotlin.jvm'
				optionalImport 'kotlin.jvm.functions'
				optionalImport 'kotlin.jvm.internal'
				optionalImport 'kotlin.collections'
				optionalImport 'kotlin.jvm.internal.markers'
				optionalImport 'kotlin.reflect'
				optionalImport 'kotlin.sequences'
				optionalImport 'sun.misc'
				optionalImport 'io.micrometer.core.instrument'
				optionalImport 'io.micrometer.core.instrument.composite'
				optionalImport 'javax.swing'
			}
		}

		plugin('io.projectreactor.addons:reactor-extra:3.2.2.RELEASE') {
			bnd {
				optionalImport 'javax.swing'
				optionalImport 'kotlin'
				optionalImport 'kotlin.jvm.functions'
				optionalImport 'kotlin.jvm.internal'
			}
		}
	}

	feature(id: 'reactor-netty', name: 'Reactor Netty', version: '0.8.6') {
		plugin('io.projectreactor.netty:reactor-netty:0.8.6.RELEASE') 
	}

	feature(id: 'RSocket', name: 'RSocket', version: '0.12.1') {
	   plugin('io.rsocket:rsocket-core:0.12.1')
	   plugin('io.rsocket:rsocket-transport-netty:0.12.1')
	}
	
	feature(id: 'Retrofit', name: 'Retrofit', version: '2.5.0') {
		// Convert the retrofit artifact to OSGi, make android.os optional and handle the split package problems in OSGi
		plugin('com.squareup.retrofit2:retrofit:2.5.0'){
			bnd {
					optionalImport 'android.os'
					optionalImport 'android.net'
					optionalImport 'javax.annotation.meta'
					optionalImport 'kotlin'
					optionalImport 'kotlin.jvm.internal'
		    }
		}
	
		// Convert the retrofit jackson converter artifact to OSGi and handle the split package problems in OSGi
		plugin('com.squareup.retrofit2:converter-jackson:2.5.0')

		// lets retrofit return reactor types
		plugin('com.jakewharton.retrofit:retrofit2-reactor-adapter:2.1.0')
	
		// Convert okhttp3 artifact to OSGi without android
		plugin('com.squareup.okhttp3:okhttp:3.14.1') {
			bnd{
				optionalImport 'android.os'
				optionalImport 'android.util'
				optionalImport 'org.conscrypt'
				optionalImport 'javax.annotation.meta'
			}
		}

		plugin('com.squareup.okhttp3:logging-interceptor:3.14.1')
	}

	feature(id: 'jcommander', name: 'jcommander', version: '1.72.0') {
			plugin('com.beust:jcommander:1.72')
	 }
}

wrapper {
	gradleVersion = '4.10.2'
}
